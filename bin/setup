#!/bin/sh

# Exit if any subcommand fails
set -e

if ! command -v phantomjs >/dev/null; then
  echo "You must install PhantomJS 2.x before continuing."
  echo "You can install with 'brew install phantomjs'"
  exit 1
else
  phantomjs_version=$(phantomjs -v)
  major_version="${phantomjs_version%.*.*}"

  if [ "$major_version" -lt 2 ]; then
    echo "Please update your PhantomJS to 2.x before continuing."
    exit 1
  fi
fi

if ! command -v asdf >/dev/null; then
  echo "You must install asdf before continuing."
  echo "See https://github.com/asdf-vm/asdf"
  exit 1
fi

if ! asdf plugin-list | grep elixir >/dev/null; then
  echo "You must install asdf-elixir before continuing."
  echo "See https://github.com/asdf-vm/asdf-elixir"
  exit 1
fi
if ! asdf plugin-list | grep erlang >/dev/null; then
  echo "You must install asdf-erlang before continuing."
  echo "See https://github.com/asdf-vm/asdf-erlang"
  exit 1
fi
if ! command -v npm >/dev/null; then
  echo "You must install asdf-nodejs before continuing."
  echo "See https://github.com/asdf-vm/asdf-nodejs"
  exit 1
fi

echo "Removing previous build artifacts"
rm -rf assets/node_modules
rm -rf deps _build
asdf plugin-update --all
asdf install

echo "Installing dependencies and compiling"
mix local.hex --force
mix local.rebar --force
mix deps.get
mix compile

echo "Setting up the database"
mix ecto.reset
MIX_ENV="test" mix ecto.reset

echo "Installing NPM dependencies"
PROJECT_ROOT=$(pwd)
cd assets
npm install --progress=false

echo "Compiling assets"
node_modules/brunch/bin/brunch build
cd "$PROJECT_ROOT"
